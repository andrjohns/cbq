library(cirque)
dat = gencirque
dat = gencirque()
names(dat)
model.matrix(formula, data)[, -1, drop = FALSE]
model.matrix(y~c1+c2, data)[, -1, drop = FALSE]
model.matrix(y~c1+c2, dat)[, -1, drop = FALSE]
model.matrix(y~c1+c2, dat)[,  drop = FALSE]
as.matrix(dat[, all.vars(y~c1+c2)[1], drop = FALSE])
all.vars(y~c1+c2)
library(Formula)
model.matrix(y~c1|c2, dat)[,  drop = FALSE]
f = Formula::Formula(y~c1)
xq = as.matrix(model.matrix(f,dat,rhs = 2)[,-1])
dim(xq)
library(rstan)
?sampling
library(cbq)
library(cbq)
library(gencirque)
dat = as.data.frame(y = ifelse(rnorm(100)>0,1,0 ), x = rnorm(100) )
mod = cbq(y~ x, data= dat)
View(dat)
dat = as.data.frame(cbind(y = ifelse(rnorm(100)>0,1,0 ), x = rnorm(100) ))
mod = cbq(y~ x, data= dat)
library(cbq)
dat = as.data.frame(cbind(y = ifelse(rnorm(100)>0,1,0 ), x = rnorm(100) ))
mod = cbq(y~ x, data= dat)
f = Formula::Formula(y~x)
as.character(f)
deparse(f)
library(cbq)
dat = as.data.frame(cbind(y = ifelse(rnorm(100)>0,1,0 ), x = rnorm(100) ))
mod = cbq(y~ x, data= dat)
library(cbq)
dat = as.data.frame(cbind(y = ifelse(rnorm(100)>0,1,0 ), x = rnorm(100) ))
mod = cbq(y~ x, data= dat)
summary(mod)
f = Formula::Formula(y~x|1)
mod = cbq(y~ x|1, data= dat)
dat = as.data.frame(cbind(y = ifelse(rnorm(100)>0,1,0 ), x = rnorm(100),ind = sample(c(1,2),100,replace = T) ))
mod = cbq(y~ x|ind, data= dat)
library(rstan)
summary(mod)
summary(mod)$summary
df = as.data.frame(mod)
View(df)
apply(df,2,quantile,probs = 0.5)
apply(df,2,quantile,probs = c(0.5,0.6))
library(cbq)
dat = as.data.frame(cbind(y = ifelse(rnorm(100)>0,1,0 ), x = rnorm(100),ind = sample(c(1,2),100,replace = T) ))
mod = cbq(y~ x|ind, data= dat)
library(cbq)
dat = as.data.frame(cbind(y = ifelse(rnorm(100)>0,1,0 ), x = rnorm(100),ind = sample(c(1,2),100,replace = T) ))
mod = cbq(y~ x|ind, data= dat)
rm(list=ls())
dat = as.data.frame(cbind(y = ifelse(rnorm(100)>0,1,0 ), x = rnorm(100),ind = sample(c(1,2),100,replace = T) ))
mod = cbq(y~ x, data= dat)
library(cbq)
dat = as.data.frame(cbind(y = ifelse(rnorm(100)>0,1,0 ), x = rnorm(100),ind = sample(c(1,2),100,replace = T) ))
mod = cbq(y~ x, data= dat)
mod = cbq(y~ x|ind, data= dat)
library(rq)
library(quantreg)
?rq
mod1 = rq(stack.loss ~ stack.x,.5)
print(mod1)
mod2 = cbq(stack.loss ~ stack.x)
mod2 = cbq(stack.loss ~ stack.x,data = stackloss)
library(bayesQR)
?bayesQR
set.seed(66)
n <- 200
X <- runif(n=n,min=0,max=10)
X <- X
y <- 1 + 2*X + rnorm(n=n, mean=0, sd=.6*X)
mod1 <- bayesQR(y~X, quantile=c(.05,.25,.5,.75,.95), alasso=TRUE, ndraw=500)
summary(mod1)
mod2 = cbq(y~X)
dat = as.data.frame(cbind(y,X))
mod2 = cbq(y~X,data = dat)
View(dat)
library(cbq)
rm(list=ls())
dat = as.data.frame(cbind(y = ifelse(rnorm(100)>0,1,0 ), x = rnorm(100),ind = sample(c(1,2),100,replace = T) ))
mod1 <- bayesQR(y~x, quantile=c(.5), ndraw=500)
mod1 <- bayesQR(y~x,data = dat, quantile=c(.5), ndraw=500)
summary(mod1)
mod2 = cbq(y~x,data = dat)
mod2$means
mod2$xnames
mod2$ulbs
t(mod2$ulbs)
mod2$means
t(mod2$means)
cbind(t(mod2$means),t(mod2$ulbs))
cbind(matrix(mod2$means,ncol = mod2$npars),t(mod2$ulbs))
mod2$npars
t(mod2$ulbs)
cbind(matrix(mod2$means,nrow = mod2$npars),t(mod2$ulbs))
tmp = mod2$stanfit
summary(tmp)
rstan::summary(tmp)
?cbq
mod2 = cbq(y~x,data = dat,nsim = 2000,thin = 5)
tmp = mod2$stanfit
tmp@sim$warmup2
print(tmp)
library(cbq)
dat = as.data.frame(cbind(y = ifelse(rnorm(100)>0,1,0 ), x = rnorm(100),ind = sample(c(1,2),100,replace = T) ))
mod = cbq(y~ x, data= dat)
print(mod)
library(cbq)
dat = as.data.frame(cbind(y = ifelse(rnorm(100)>0,1,0 ), x = rnorm(100),ind = sample(c(1,2),100,replace = T) ))
mod = cbq(y~ x, data= dat)
print(mod)
library(cbq)
dat = as.data.frame(cbind(y = ifelse(rnorm(100)>0,1,0 ), x = rnorm(100),ind = sample(c(1,2),100,replace = T) ))
mod = cbq(y~ x, data= dat)
print(mod)
coef(mod)
coefficient(mod)
print(mod,"mcmc")
library(cbq)
dat = as.data.frame(cbind(y = ifelse(rnorm(100)>0,1,0 ), x = rnorm(100),ind = sample(c(1,2),100,replace = T) ))
mod = cbq(y~ x, data= dat)
print(mod)
coef(mod)
print(mod,"mcmc")
rstan::summary(mod$stanfit)
library(cbq)
dat = as.data.frame(cbind(y = ifelse(rnorm(100)>0,1,0 ), x = rnorm(100),ind = sample(c(1,2),100,replace = T) ))
mod = cbq(y~ x, data= dat)
print(mod)
coef(mod)
print(mod,"mcmc")
plot(mod$stanfit)
rstan::plot(mod$stanfit)
rstan::stan_plot(mod$stanfit)
library(cbq)
dat = as.data.frame(cbind(y = ifelse(rnorm(100)>0,1,0 ), x = rnorm(100),ind = sample(c(1,2),100,replace = T) ))
mod = cbq(y~ x, data= dat)
print(mod)
coef(mod)
print(mod,"mcmc")
plot(mod)
plot(mod,"coef")
rm(list=ls())
library(cbq)
dat = as.data.frame(cbind(y = ifelse(rnorm(100)>0,1,0 ), x = rnorm(100),ind = sample(c(1,2),100,replace = T) ))
mod = cbq(y~ x, data= dat)
print(mod)
coef(mod)
print(mod,"mcmc")
plot(mod)
plot(mod,"coef")
plot(mod,"coef",pars = "beta[1]")
