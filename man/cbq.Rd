% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cbq.R
\name{cbq}
\alias{cbq}
\title{Fitting conditional binary quantile models}
\usage{
cbq(formula, data, q = NULL, nsim = 1000, burnin = NULL, thin = 1,
  CIsize = 0.95, nchain = 1, seeds = 12345, inverse_distr = FALSE,
  offset = 1e-20)
}
\arguments{
\item{formula}{An object of class "formula" (or one that can be
coerced to that class): a symbolic description of the model to be fitted.}

\item{data}{A data frame containing the variables in the model.}

\item{q}{The quantile value.}

\item{nsim}{The number of iterations.}

\item{burnin}{The number of burnin iterations.}

\item{thin}{Thinning parameter.}

\item{CIsize}{The size of confidence interval.}

\item{nchain}{The number of parallel chains.}

\item{seeds}{Random seeds to replicate the results.}

\item{inverse_distr}{If FALSE, the ALD will not be reversed. The default is FALSE.}

\item{offset}{Offset values to enhance sampling stability. The default value is 1e-20.}
}
\description{
The main function for running the conditional binary quantile model. The function returns a cbq \code{cbq} object that can be further investigated using standard functions such as \code{plot}, \code{print}, \code{coef}, and \code{predict}.
}
\details{
The model can be passed either as a combination of a \code{formula} and a data frame \code{data}, as in \code{lm()}.

Convergence diagnotics can be performed using either \code{print(object, "mcmc")} or \code{plot(object, "mcmc")}.
}
\examples{



}
\seealso{

}
